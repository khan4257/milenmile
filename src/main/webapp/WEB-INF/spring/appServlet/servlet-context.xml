<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:component-scan base-package="com.appdisco.mnm" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	
	<!-- AOP 설정 -->
	
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" rollback-for="Throwable" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" rollback-for="Throwable" />
			<tx:method name="*" propagation="REQUIRED" read-only="false" rollback-for="Throwable" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="servicePointcut" expression="execution(* com.appdisco.mnm.service..*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut" />
		<aop:aspect ref="loggingAspect">
			<aop:around pointcut-ref="servicePointcut" method="logProfiling" />
			<aop:after-throwing pointcut-ref="servicePointcut" throwing="ex" method="logException" />
		</aop:aspect>
	</aop:config>
	
	<aop:config>
		<aop:aspect ref="versionCheckAspect">
			<aop:pointcut id="versionCheckPointcut" expression="execution(* com.appdisco.mnm.api.*Controller.*(..))" />
			<aop:around pointcut-ref="versionCheckPointcut" method="versionCheck" />
		</aop:aspect>
	</aop:config>
 	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	 -->
	 
	
	
	<!-- View 글로벌 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="ignoreAcceptHeader" value="true" />
		<beans:property name="defaultContentType" value="text/html" />
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="json" value="application/json"/>
				<beans:entry key="xml" value="application/xml" />
			</beans:map>
		</beans:property>
		<beans:property name="viewResolvers">
			<beans:list>
				<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
					<beans:property name="order" value="0" />
				</beans:bean>
				<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<beans:property name="prefix" value="/WEB-INF/view/"/>
					<beans:property name="suffix" value=".jsp"/>
				</beans:bean>
			</beans:list>
		</beans:property>
		<beans:property name="defaultViews">
			<beans:list>
				<beans:ref bean="pageJsonReport" />
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="pageJsonReport" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
	
	<!-- 파일 업로드 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize">
			<beans:value>10000000</beans:value>
		</beans:property>
	</beans:bean>
	
	
</beans:beans>
